package <%= base_package %>.commands {

	import mx.rpc.IResponder;
	
	import org.ruboss.Ruboss;
	import org.ruboss.events.RubossEvent;
	import org.ruboss.controllers.ICommand;
	import org.ruboss.utils.RubossUtils;
	
	import <%= base_package %>.models.<%= class_name %>;
	import <%= base_package %>.models.<%= project_name %>ModelLocator;
	import <%= base_package %>.controllers.<%= project_name %>Event;
	import <%= base_package %>.business.FileDelegate;

	public class <%= class_name %>Command implements ICommand {
	
		public var _<%= class_name.downcase_first_letter %>:<%= class_name %>;
		public var metadata:Object;
		public var railsController:String = "<%= class_name.downcase.pluralize %>";
		private var appModel:<%= project_name %>ModelLocator = <%= project_name %>ModelLocator.getInstance();
		
    	/**
     	 * Command Constructor.
     	 * Creates the "<%= class_name %>" Model from the Cairngorm Event data.
	 	 * This allows common RESTful functions (show, create, update, delete)
	 	 * to be reused by multiple views, thereby following the DRY principle.
     	 */
    	public function <%= class_name %>Command() {
			super();
		}
	
		public function execute(event:RubossEvent):void {
			_<%= class_name.downcase_first_letter %> = event.data as <%= class_name %>;
			metadata = event.data;

			switch(event.type)
        	{
            	case <%= project_name %>Event.LIST_<%= class_name.pluralize.upcase %>:
                	list<%= class_name.pluralize %>();  
                	break;
				case <%= project_name %>Event.CREATE_<%= class_name.upcase %>:
					create<%= class_name %>();
					break;
				case <%= project_name %>Event.UPDATE_<%= class_name.upcase %>:
					update<%= class_name %>();
					break;
				case <%= project_name %>Event.DESTROY_<%= class_name.upcase %>:
					destroy<%= class_name %>();
					break;
				case <%= project_name %>Event.UPLOAD_<%= class_name.pluralize.upcase %>:
					upload<%= class_name %>();
					break;
				case <%= project_name %>Event.DOWNLOAD_<%= class_name.upcase %>:
					download<%= class_name %>();
					break; 
        	}
		}
	
    	/**
     	 * GET /<%= class_name.downcase_first_letter.pluralize %>
	 	 * GET /<%= class_name.downcase_first_letter.pluralize %>.xml
     	 */
    	public function list<%= class_name.pluralize %>():void {
			Ruboss.models.index(<%= class_name %>);
		}

		/**
     	 * POST /<%= class_name.downcase_first_letter %>
	 	 * POST /<%= class_name.downcase_first_letter %>.xml
     	 */
		public function create<%= class_name %>():void {
			_<%= class_name.downcase_first_letter %>.create({afterCallback: on<%= class_name %>Create});
		}

    	/**
     	 * PUT /<%= class_name.downcase_first_letter %>/1
	 	 * PUT /<%= class_name.downcase_first_letter %>/1.xml
     	 */
		public function update<%= class_name %>():void {
			_<%= class_name.downcase_first_letter %>.update({afterCallback: on<%= class_name %>Update});
		}

    	/**
     	 * DELETE /<%= class_name.downcase_first_letter %>/1
	 	 * DELETE /<%= class_name.downcase_first_letter %>/1.xml
     	 */
		public function destroy<%= class_name %>():void {
			_<%= class_name.downcase_first_letter %>.destroy({afterCallback: on<%= class_name %>Destroy});
		}
		
		// UPLOAD and DOWNLOAD FUNCTIONS
		
		public function upload<%= class_name %>():void {
			var delegate:FileDelegate = new FileDelegate(railsController);
			delegate.upload(<% if with_user %>appModel.<%= with_user.to_s.downcase_first_letter %><% end -%>);
		}
		
		public function download<%= class_name %>():void {
			var delegate:FileDelegate = new FileDelegate(railsController);
			if (metadata.downloader == "rails") {
				delegate.railsDownload(metadata.directory, metadata.file);
			} else if (metadata.downloader == "flex"){
				delegate.flexDownload(metadata.directory, metadata.file);
			} else {
				delegate.railsDownload(metadata.directory, metadata.file);
			}
		}
		
		// PRIVATE FUNCTIONS
	
		private function on<%= class_name %>Create(<%= class_name.downcase_first_letter %>:<%= class_name %>):void {
			_<%= class_name.downcase_first_letter %> = new <%= class_name %>;
		}

		private function on<%= class_name %>Update(<%= class_name.downcase_first_letter %>:<%= class_name %>):void {
			_<%= class_name.downcase_first_letter %> = RubossUtils.clone(<%= class_name.downcase_first_letter %>) as <%= class_name %>;
		}

		private function on<%= class_name %>Destroy(<%= class_name.downcase_first_letter %>:<%= class_name %>):void {
			on<%= class_name %>Create(<%= class_name.downcase_first_letter %>);
		}
	}
}