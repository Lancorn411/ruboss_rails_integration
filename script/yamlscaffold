#!/usr/bin/env ruby
################################################################################
# Copyright 2008, Ruboss Technology Corporation.
#
# This software is dual-licensed under both the terms of the Ruboss Commercial
# License v1 (RCL v1) as published by Ruboss Technology Corporation and under
# the terms of the GNU General Public License v3 (GPL v3) as published by the
# Free Software Foundation.
#
# Both the RCL v1 (rcl-1.0.txt) and the GPL v3 (gpl-3.0.txt) are included in
# the source code. If you have purchased a commercial license then only the
# RCL v1 applies; otherwise, only the GPL v3 applies. To learn more or to buy a
# commercial license, please go to http://ruboss.com.
################################################################################
require File.dirname(__FILE__) + '/../config/boot'
require File.dirname(__FILE__) + '/../config/environment'
require 'yaml'
require 'rails_generator'
require 'rails_generator/scripts/generate'
require 'fileutils'

source = 'db/model.yml'

if ARGV.include?('clean')
  FileUtils.rm_f Dir.glob('app/helpers/*')
  FileUtils.rm_f Dir.glob('db/migrate/*')
end

def extract_attrs(line, attrs)
  attrs.each do |key,value|
    if key =~ /\*$/
      #If the key ends in *, it's the label field, so remove
      #the * from the key name and make this the first argument
      #on the line, since that's the convention used by the
      #rscaffold_generator.
      line = "#{key[0..-2]}:#{value}" + line
    elsif value.class == Array
      line << " #{key}:#{value.join(',')}"
    else
      line << " #{key}:#{value}"
    end    
  end
  line
end

models = YAML.load(File.open(source, 'r'))
models.each do |model|
  line = ""
  attrs = model[1]
  if attrs.class == Array
    attrs.each do |elm|
      line = extract_attrs(line, elm)
    end
  else
    line = extract_attrs(line, attrs)
  end
  line = model[0].camelcase + " " + line
  puts 'running: ruboss_scaffold ' + line
  Rails::Generator::Scripts::Generate.new.run(["ruboss_scaffold"] + line.split, :flex_only => ARGV.include?('flexonly'))
  puts 'done ...'
  sleep 1
end

Rails::Generator::Scripts::Generate.new.run(["ruboss_config"], :app_only => true, :skip_framework => ARGV.include?('skipframework'))
